"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1383],{202:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"AgentOrg Intro","href":"/Agent-First-Organization/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Tutorials","items":[{"type":"link","label":"Roleplay Bot","href":"/Agent-First-Organization/docs/tutorials/roleplay-chatbot","docId":"tutorials/roleplay-chatbot","unlisted":false},{"type":"link","label":"Customer Service Bot","href":"/Agent-First-Organization/docs/tutorials/customer-service","docId":"tutorials/customer-service","unlisted":false},{"type":"link","label":"Booking Service Bot","href":"/Agent-First-Organization/docs/tutorials/booking-service","docId":"tutorials/booking-service","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/Agent-First-Organization/docs/tutorials/intro"},{"type":"link","label":"Config","href":"/Agent-First-Organization/docs/Config","docId":"Config","unlisted":false},{"type":"category","label":"Taskgraph","items":[{"type":"link","label":"Generation","href":"/Agent-First-Organization/docs/Taskgraph/Generation","docId":"Taskgraph/Generation","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/Agent-First-Organization/docs/Taskgraph/intro"},{"type":"link","label":"MessageState","href":"/Agent-First-Organization/docs/MessageState","docId":"MessageState","unlisted":false},{"type":"category","label":"Agents","items":[{"type":"link","label":"Agents","href":"/Agent-First-Organization/docs/Agents/","docId":"Agents/Agents","unlisted":false},{"type":"link","label":"MessageAgent","href":"/Agent-First-Organization/docs/Agents/MessageAgent","docId":"Agents/MessageAgent","unlisted":false},{"type":"link","label":"RAGAgent","href":"/Agent-First-Organization/docs/Agents/RAGAgent","docId":"Agents/RAGAgent","unlisted":false},{"type":"link","label":"DatabaseAgent","href":"/Agent-First-Organization/docs/Agents/DatabaseAgent","docId":"Agents/DatabaseAgent","unlisted":false},{"type":"link","label":"SearchAgent","href":"/Agent-First-Organization/docs/Agents/SearchAgent","docId":"Agents/SearchAgent","unlisted":false},{"type":"link","label":"DefaultAgent","href":"/Agent-First-Organization/docs/Agents/DefaultAgent","docId":"Agents/DefaultAgent","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/Agent-First-Organization/docs/Agents/intro"},{"type":"category","label":"Evaluation","items":[{"type":"link","label":"User Simulator","href":"/Agent-First-Organization/docs/Evaluation/UserSimulator","docId":"Evaluation/UserSimulator","unlisted":false},{"type":"link","label":"Metrics","href":"/Agent-First-Organization/docs/Evaluation/Metrics","docId":"Evaluation/Metrics","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/Agent-First-Organization/docs/Evaluation/intro"}]},"docs":{"Agents/Agents":{"id":"Agents/Agents","title":"Agents","description":"Agents serve as the fundamental building block of the AgentOrg framework and responsible for the \\"execution\\" of the tasks and its subtasks. Unlike some frameworks which differentiates between agents and tools, AgentOrg combines both into an Agent component. Responsible for the execution and managed by the orchestrator, each Agent are designed to convert instructions into results. Although structured, Agents can be designed to do high level complicated tasks and can call other agents itself, greatly enhancing its ability to address.","sidebar":"tutorialSidebar"},"Agents/DatabaseAgent":{"id":"Agents/DatabaseAgent","title":"DatabaseAgent","description":"Introduction","sidebar":"tutorialSidebar"},"Agents/DefaultAgent":{"id":"Agents/DefaultAgent","title":"DefaultAgent","description":"","sidebar":"tutorialSidebar"},"Agents/intro":{"id":"Agents/intro","title":"Agents","description":"","sidebar":"tutorialSidebar"},"Agents/MessageAgent":{"id":"Agents/MessageAgent","title":"MessageAgent","description":"Introduction","sidebar":"tutorialSidebar"},"Agents/RAGAgent":{"id":"Agents/RAGAgent","title":"RAGAgent","description":"Introduction","sidebar":"tutorialSidebar"},"Agents/SearchAgent":{"id":"Agents/SearchAgent","title":"SearchAgent","description":"Introduction","sidebar":"tutorialSidebar"},"Config":{"id":"Config","title":"Config","description":"Config files are the simple and recommended way to build your TaskGraph. A standard JSON document, the Generator can create and breakdown the role into a series of tasks and steps which are then matched with the appropriate Agents and connected with the proper tasks to create a TaskGraph.","sidebar":"tutorialSidebar"},"Evaluation/intro":{"id":"Evaluation/intro","title":"Introduction","description":"It is designed to evaluate a task-oriented dialogue system by generating synthetic conversations, extracting task completion metrics, and producing a labeled synthetic dataset.","sidebar":"tutorialSidebar"},"Evaluation/Metrics":{"id":"Evaluation/Metrics","title":"Metrics","description":"There are three metrics analyzed from the User Simulator:","sidebar":"tutorialSidebar"},"Evaluation/UserSimulator":{"id":"Evaluation/UserSimulator","title":"User Simulator","description":"In order to evaluate the performance of the chatbot, we will simulate user interactions with the chatbot. The user simulator consist of two-pass process:","sidebar":"tutorialSidebar"},"Example/intro":{"id":"Example/intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes."},"Example/tutorial-basics/congratulations":{"id":"Example/tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template."},"Example/tutorial-basics/create-a-blog-post":{"id":"Example/tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed..."},"Example/tutorial-basics/create-a-document":{"id":"Example/tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:"},"Example/tutorial-basics/create-a-page":{"id":"Example/tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:"},"Example/tutorial-basics/deploy-your-site":{"id":"Example/tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack)."},"Example/tutorial-basics/markdown-features":{"id":"Example/tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features."},"Example/tutorial-extras/manage-docs-versions":{"id":"Example/tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs."},"Example/tutorial-extras/translate-your-site":{"id":"Example/tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French."},"intro":{"id":"intro","title":"AgentOrg Intro","description":"AgentOrg provides a framework for developing Agents to complete complex tasks powered by LLMs. The framework is designed to be modular and extensible, allowing developers to customize agents that can interact with each other in a variety of ways under the supervision of the orchestrator managed by Taskgraph. The framework is built on top of the LangChain platform, which provides a flexible LangGraph framework and LangChain Expression Language (LCEL) to chain different module together.","sidebar":"tutorialSidebar"},"MessageState":{"id":"MessageState","title":"MessageState","description":"MessageState is a data structure that represents the current snapshot of the conversation, which is developed on top of LangGraph State. It is the input parameter passed from the orchestrator to agents.","sidebar":"tutorialSidebar"},"Taskgraph/Generation":{"id":"Taskgraph/Generation","title":"Generation","description":"The TaskGraph is generated from the Config file. The Config file is a JSON document that contains the role, user objective, builder objective, domain, intro, taskdocs, ragdocs, tasks, and agents. The Generator reads the Config file and creates a series of tasks that are matched with the appropriate agents.","sidebar":"tutorialSidebar"},"Taskgraph/intro":{"id":"Taskgraph/intro","title":"Introduction","description":"In complex real-world scenarios, tasks often involve overlapping responsibilities and varied resources. To manage this complexity, agents need mechanisms to identify reusable sub-task patterns while handling unique tasks independently. This capability mirrors real-world problem-solving, where individuals streamline recurring tasks based on past experience while tackling novel challenges flexibly.","sidebar":"tutorialSidebar"},"tutorials/booking-service":{"id":"tutorials/booking-service","title":"Booking Service Bot","description":"Connect your bots to databases through DatabaseAgents","sidebar":"tutorialSidebar"},"tutorials/customer-service":{"id":"tutorials/customer-service","title":"Customer Service Bot","description":"Enhance your bots with Retrieval Augemnted Generation (RAG)","sidebar":"tutorialSidebar"},"tutorials/intro":{"id":"tutorials/intro","title":"Tutorials","description":"","sidebar":"tutorialSidebar"},"tutorials/roleplay-chatbot":{"id":"tutorials/roleplay-chatbot","title":"Roleplay Bot","description":"Build a basic chatbot with MessageAgents","sidebar":"tutorialSidebar"}}}}')}}]);